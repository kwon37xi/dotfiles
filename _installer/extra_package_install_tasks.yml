---
- name: prepare for virtualbox-ext-pack PUEL accept # https://askubuntu.com/questions/811488/command-to-accept-virtualbox-puel-for-virtualbox-ext-pack-installation
  become: yes
  shell: "echo virtualbox-ext-pack virtualbox-ext-pack/license select true | debconf-set-selections"
- name: install virtualization
  become: yes
  apt:
    package:
      - virtualbox
      - virtualbox-ext-pack
      - virtualbox-guest-additions-iso
      - qemu
      - aqemu
      - qemu-kvm
      - virt-manager
- name: install video audio graphic packages
  become: yes
  apt:
    package:
      - gimp
      - gimp-gmic
      - gimp-data-extras
      - gimp-help-ko
      - nomacs
      - sxiv
      - vlc
      - smplayer
      - audacious
      - handbrake
      - gpick
      - gromit-mpx
- name: install extra dev related packages
  become: yes
  apt:
    package:
      - vagrant
      - code
      - packer
- name: database clients
  become: yes
  apt:
    package:
      - mysql-client
- name: install typora
  become: yes
  apt:
    package:
      - typora
- name: add architecture i386
  become: yes
  shell: "dpkg --add-architecture i386"
- name: install wine & playonlinux
  become: yes
  apt:
    package:
      - wine
      - winetricks
      - playonlinux
- name: install rust and cargo
  become: yes
  apt:
    package:
      - rustc
      - cargo
- name: ocs-url dependencies
  become: yes
  apt:
    package:
      - libqt5svg5
      - qml-module-qtquick-controls
- name: ocs-url install # https://www.opendesktop.org/p/1136805/
  become: yes
  apt:
    deb: "/home/{{ current_user }}/.dotfiles/_backup/themes/ocs-url_3.1.0-0ubuntu1_amd64.deb"
- name: zoom.us preparation
  become: yes
  apt:
    package:
      - libgl1-mesa-glx
      - libegl1-mesa
      - libxcb-xtest0
- name: zoom.us install
  command: "/home/{{ current_user }}/.dotfiles/local_bin/.local/bin/install-zoom.sh"
- name: download DEBs install
  become: yes
  apt:
    deb: "{{ item }}"
  register: download_debs_installed
  until: download_debs_installed is not failed
  retries: 3
  delay: 10
  with_items:
    - https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    - "https://downloads.slack-edge.com/linux_releases/slack-desktop-{{ slack_version }}-amd64.deb"
- name: youtube-dl
  shell: "/home/{{ current_user }}/.dotfiles/local_bin/.local/bin/install-youtube-dl.sh"
- name: bitwarden
  flatpak:
    name: "com.bitwarden.desktop"
- name: shotcut
  flatpak:
    name: "org.shotcut.Shotcut"
- name: joplin
  flatpak:
    name: "net.cozic.joplin_desktop"
- name: Planner
  flatpak:
    name: "com.github.alainm23.planner"
- name: Flameshot
  flatpak:
    name: "org.flameshot.Flameshot"
- name: flatseal
  flatpak:
    name: "com.github.tchx84.Flatseal"
- name: local applications dir
  file:
    path: "/home/{{ current_user }}/.local/share/applications"
    state: directory
- name: IntelliJ IDEA target dir
  file:
    path: "/home/{{ current_user }}/.local/opt/JetBrains/ideaIU"
    state: directory
- name: intellij ultimate latest version
  shell: curl -fsSL "https://data.services.jetbrains.com/products?code=IIU%2CIIC&release.type=release" | jq -r '[.[].releases[].version][0]'
  register: jetbrains_intellij_idea_latest_version_result
- set_fact:
    jetbrains_intellij_idea_latest_version={{ jetbrains_intellij_idea_latest_version_result.stdout }}
- name: IntelliJ IDEA user install
  unarchive:
    src: "https://download.jetbrains.com/idea/ideaIU-{{ jetbrains_intellij_idea_latest_version }}.tar.gz"
    remote_src: yes
    dest: "/home/{{current_user}}/.local/opt/JetBrains/ideaIU"
    extra_opts: [--strip-components=1]
    creates: "/home/{{ current_user }}/.local/opt/JetBrains/ideaIU/bin/idea.sh"
  register: intellij_idea_installed
  until: intellij_idea_installed is not failed
  retries: 3
  delay: 10
- name: Memory Analyzer(MAT)
  unarchive:
    src: http://mirror.kakao.com/eclipse/mat/1.10.0/rcp/MemoryAnalyzer-1.10.0.20200225-linux.gtk.x86_64.zip
    remote_src: yes
    dest: "/home/{{ current_user }}/.local/opt"
    creates: "/home/{{ current_user }}/.local/opt/mat"
  register: mat_installed
  until: mat_installed is not failed
  retries: 3
  delay: 10
- name: dbeaver install
  command: "/home/{{ current_user }}/.dotfiles/local_bin/.local/bin/install-dbeaver-ce.sh"
- name: fzf
  shell: "/home/{{ current_user }}/.dotfiles/local_bin/.local/bin/install-fzf.sh"
- name: fblog
  shell: "/home/{{ current_user }}/.dotfiles/local_bin/.local/bin/install-fblog.sh"
- name: sd
  shell: "/home/{{ current_user }}/.dotfiles/local_bin/.local/bin/install-sd.sh"
- name: broot
  shell: "/home/{{ current_user }}/.dotfiles/local_bin/.local/bin/install-broot.sh"
- name: dust
  shell: "/home/{{ current_user }}/.dotfiles/local_bin/.local/bin/install-dust.sh"
- name: lazydocker
  shell: "/home/{{ current_user }}/.dotfiles/local_bin/.local/bin/install-lazydocker.sh"
- name: procs
  shell: "/home/{{ current_user }}/.dotfiles/local_bin/.local/bin/install-procs.sh"
- name: duf
  shell: "/home/{{ current_user }}/.dotfiles/local_bin/.local/bin/install-duf.sh"
- name: hugo
  shell: "/home/{{ current_user }}/.dotfiles/local_bin/.local/bin/install-hugo.sh"
- name: fluentreader
  shell: "/home/{{ current_user }}/.dotfiles/local_bin/.local/bin/install-fluentreader.sh"
- name: delta
  shell: "/home/{{ current_user }}/.dotfiles/local_bin/.local/bin/install-delta.sh"
- name: speedread
  shell: "/home/{{ current_user }}/.dotfiles/local_bin/.local/bin/install-speedread.sh"
- name: bitwarden-cli
  shell: "/home/{{ current_user }}/.dotfiles/local_bin/.local/bin/install-bitwarden-cli.sh"
- name: tfenv
  shell: "/home/{{ current_user }}/.dotfiles/local_bin/.local/bin/install-tfenv.sh"
- name: awscli
  shell: "/home/{{ current_user }}/.dotfiles/local_bin/.local/bin/install-awscli.sh"
- name: go-jira
  shell: "/home/{{ current_user }}/.dotfiles/local_bin/.local/bin/install-go-jira.sh"
- name: yq
  shell: "/home/{{ current_user }}/.dotfiles/local_bin/.local/bin/install-yq.sh"
- name: pacstall
  shell: "/home/{{ current_user }}/.dotfiles/local_bin/.local/bin/install-pacstall.sh"
- name: etcher
  shell: "/home/{{ current_user }}/.dotfiles/local_bin/.local/bin/install-etcher_appimage.sh"
- name: starship
  shell: "/home/{{ current_user }}/.dotfiles/local_bin/.local/bin/install-starship.sh"
- name: remove snap-store
  become: yes
  community.general.snap:
    name: snap-store
    state: absent
- name: ascii-image-converter
  become: yes
  community.general.snap:
    name: ascii-image-converter
    state: present
- name: bpytop
  become: yes
  community.general.snap:
    name: bpytop
    state: present
- name: bpytop permissions
  become: yes
  shell: |
    snap connect bpytop:mount-observe
    snap connect bpytop:network-control
    snap connect bpytop:hardware-observe
    snap connect bpytop:system-observe
    snap connect bpytop:process-control
    snap connect bpytop:physical-memory-observe
- name: dirsize # https://github.com/frossm/dirsize
  become: yes
  community.general.snap:
    name: dirsize
    state: present
- name: diresize permission
  shell: |
    snap connect dirsize:system-backup
- name: exa
  become: yes
  shell: pacstall -P -I exa
- name: lsd
  become: yes
  shell: pacstall -P -I lsd-deb
- name: universal-ctags
  become: yes
  shell: pacstall -P -I universal-ctags-git
